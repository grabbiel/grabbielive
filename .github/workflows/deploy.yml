name: Deploy C++ Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Deploy to VM
      env:
        PRIVATE_KEY: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
        VM_USER: ${{ secrets.VM_USER }}
        VM_IP: ${{ secrets.VM_IP }}
      run: |
        # Setup SSH
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan $VM_IP >> ~/.ssh/known_hosts
        
        # Create directory if it does not exist
        ssh -i ~/.ssh/id_rsa $VM_USER@$VM_IP 'mkdir -p /repo/server/include'

        # Copy files to VM
        scp -i ~/.ssh/id_rsa server.cpp $VM_USER@$VM_IP:/repo/server/
        scp -i ~/.ssh/id_rsa include/Logger.hpp $VM_USER@$VM_IP:/repo/server/include
        scp -i ~/.ssh/id_rsa setup_server.sh $VM_USER@$VM_IP:/repo/server
        
        # SSH commands to rebuild and restart service with error handling
        ssh -i ~/.ssh/id_rsa $VM_USER@$VM_IP '
          cd /repo/server && \
          chmod +x setup_server.sh && \
          
          # Run the setup script
          sudo ./setup_server.sh
          
          # Check if the services are running
          if ! sudo systemctl is-active --quiet grabbiel-server; then
            echo "Error: C++ server failed to start"
            sudo systemctl status grabbiel-server
            exit 1
          fi
          
          if ! sudo systemctl is-active --quiet apache2; then
            echo "Error: Apache server failed to start"
            sudo systemctl status apache2
            exit 1
          fi
          
          # Show success message
          echo "Deployment completed successfully"
          echo "C++ server is running on port 8443"
          echo "Apache is proxying requests from port 443 to 8443"
        '
